CREATE SEQUENCE IF NOT EXISTS user_seq 
START WITH 101 
INCREMENT BY 1 
MINVALUE 101 
MAXVALUE 100000000 
NO CYCLE;

CREATE TABLE IF NOT EXISTS app_user (
  id BIGINT NOT NULL DEFAULT NEXTVAL('user_seq'),
  firstname VARCHAR(255) NOT NULL,
  lastname VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  credit INT NOT NULL,
  is_verify BOOLEAN DEFAULT false,
  
  CONSTRAINT user_pk PRIMARY KEY (id),
  CONSTRAINT user_uk UNIQUE (email)
);

CREATE SEQUENCE IF NOT EXISTS token_seq 
START WITH 101 
INCREMENT BY 1 
MINVALUE 101 
MAXVALUE 10000000000 
NO CYCLE;

CREATE TABLE IF NOT EXISTS token (
  id BIGINT NOT NULL DEFAULT NEXTVAL('token_seq'),
  token VARCHAR(6) NOT NULL,
  type VARCHAR(255) NOT NULL,
  expiration TIMESTAMP NOT NULL,
  is_used BOOLEAN DEFAULT false,
  used_at TIMESTAMP,
  user_id BIGINT NOT NULL,

  CONSTRAINT token_pk PRIMARY KEY (id),
  CONSTRAINT token_uk UNIQUE (token),
  CONSTRAINT token_ck CHECK(type IN ('EMAIL_VERIFICATION', 'RESET_PASSWORD')),
  CONSTRAINT token_fk FOREIGN KEY (user_id) REFERENCES app_user(id)
);

CREATE SEQUENCE IF NOT EXISTS file_seq 
START WITH 101 
INCREMENT BY 1 
MINVALUE 101 
MAXVALUE 10000000000 
NO CYCLE;

CREATE TABLE IF NOT EXISTS file (
  id BIGINT NOT NULL DEFAULT NEXTVAL('file_seq'),
  uuid VARCHAR(255) NOT NULL,
  name VARCHAR(255) NOT NULL,
  type VARCHAR(255) NOT NULL,
  size BIGINT NOT NULL,
  location TEXT NOT NULL,
  is_public BOOLEAN NOT NULL DEFAULT false,
  uploaded_at TIMESTAMP NOT NULL,
  user_id BIGINT NOT NULL,

  CONSTRAINT file_pk PRIMARY KEY (id),
  CONSTRAINT file_uk UNIQUE (uuid),
  CONSTRAINT file_fk FOREIGN KEY (user_id) REFERENCES app_user(id)
);

CREATE SEQUENCE IF NOT EXISTS payment_transaction_seq
START WITH 101 
INCREMENT BY 1 
MINVALUE 101 
MAXVALUE 10000000000 
NO CYCLE;

CREATE TABLE IF NOT EXISTS payment_transaction {
  id BIGINT NOT NULL DEFAULT NETVAL('payment_transaction_seq'),
  amount INT NOT NULL,
  credits INT NOT NULL,
  order_id VARCHAR(255) NOT NULL,
  payment_id VARCHAR(255),
  plan VARCHAR(255) NOT NULL,
  trasnsaction_date TIMESTAMP NOT NULL,
  status VARCHAR(255) NOT NULL,
  user_id BIGINT NOT NULL,

  CONSTRAINT tx_pk PRIMARY KEY (id),
  CONSTRAINT tx_ouk UNIQUE(order_id),
  CONSTRAINT tx_puk UNIQUE(payment_id),
  CONSTRAINT tx_plan CHECK (plan IN ('BASIC', 'PREMIUM', 'ULTIMATE')),
  CONSTRAINT tx_status CHECK(status IN ('PROCESSING', 'SUCCESS', 'FAIL')),
  CONSTRAINT tx_fk FOREIGN KEY REFERENCES app_user(id)
};